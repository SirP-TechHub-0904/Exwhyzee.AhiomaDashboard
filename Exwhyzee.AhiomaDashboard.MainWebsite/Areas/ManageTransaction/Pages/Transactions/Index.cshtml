@page
@model Exwhyzee.AhiomaDashboard.MainWebsite.Areas.ManageTransaction.Pages.Transactions.IndexModel

@{
    ViewData["Title"] = "Index";
}


    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">

                    <h3 class="card-title">
                        All Transactions

                    </h3>
                    @if (TempData["error"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible">
                            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                            <strong>@TempData["error"]</strong>
                        </div>
                    }
                    @if (TempData["success"] != null)
                    {
                        <div class="alert alert-success alert-dismissible">
                            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                            <strong>@TempData["success"]</strong>
                        </div>
                    }
                </div>
                <div class="card-body table-responsive">
                    <form asp-page="./Index" method="get">
                        <div class="form-actions no-color">
                            <div class="row">
                                <div class="col-md-12">Search...</div>
                                <div class="col-md-3"><input type="text" name="SearchString" class="form-control" value="@Model.CurrentFilter" /></div>
                                <div class="col-md-3"><input type="submit" value="Search" class="btn btn-primary" /></div>

                                <div class="col-md-5">

                                </div>

                            </div>
                        </div>
                    </form>
                    @{ int? p = 0;
                        if (Model.CurrentPage == null)
                        {
                            p = 1;
                        }
                        else
                        {
                            p = Model.CurrentPage;
                        } }
                    page @p of @Model.TotalPages pages (@Model.Count items)


                    <div id="datatable_wrapper" class="dataTables_wrapper table-responsive dt-bootstrap4 no-footer">
                        <div class="row">
                            <div class="col-md-12 table-responsive">
                                <table id="datatable7" class="table table-bordered dt-responsive nowrap dataTable no-footer" style="border-collapse: collapse; border-spacing: 0px; width: 100%;color:#ffffff;" role="grid" aria-describedby="datatable_info">

                                    <thead>
                                        <tr>
                                            <th>S/N</th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Transaction[0].DateOfTransaction)
                                            </th>

                                            <th>
                                                Account ID
                                            </th>
                                            <th>
                                                Name
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Transaction[0].Amount)
                                            </th>

                                            <th>
                                                @Html.DisplayNameFor(model => model.Transaction[0].TransactionType)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Transaction[0].Status)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Transaction[0].Description)
                                            </th>

                                            <th>
                                                @Html.DisplayNameFor(model => model.Transaction[0].TrackCode)
                                            </th>
                                            @*<th></th>*@
                                        </tr>
                                    </thead>
                                    @{ int sno = 0; }
                                    <tbody>
                                        @foreach (var item in Model.Transaction)
                                        {

                            <tr>
                                @{ string icol = "";
                                    if (String.IsNullOrEmpty(item.Color))
                                    {
                                        icol = "#ffffff;";
                                    }
                                    else
                                    {
                                        icol = "#000000";
                                    } }
                            </tr>
                                            <tr style="background-color:@item.Color;color:@icol;">
                                                <td>
                                                    @{ sno++; }
                                                    @sno
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.DateOfTransaction)
                                                </td>

                                                <td>
                                                    @Html.DisplayFor(modelItem => item.UserProfile.IdNumber)
                                                    @* @await Component.InvokeAsync("AccountId", new { uid = item.UserId })*@

                                                </td>
                                                <td style="line-height:0.9;">
                                                    @Html.DisplayFor(modelItem => item.UserProfile.Fullname)
                                                    @*@await Component.InvokeAsync("AccountName", new { uid = item.UserId })*@
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Amount)
                                                </td>

                                                <td>
                                                    @Html.DisplayFor(modelItem => item.TransactionType)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Status)
                                                    @if (User.Identity.IsAuthenticated && User.IsInRole("mSuperAdmin"))
                                                    {
                                    @if (item.Status == Exwhyzee.Enums.EntityStatus.Pending)
                                    {
                <a asp-page="/ManageAccounts/CompleteDeposit" asp-route-id="@item.Id" asp-area="UserManager">Verify</a>}}
                                                </td>
                                                <td style="line-height:0.9;">
                                                    @Html.DisplayFor(modelItem => item.Description)
                                                </td>

                                                <td>
                                                    @Html.DisplayFor(modelItem => item.TrackCode)
                                                </td>
                                                @*<td>
                                        <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                                        <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                                        <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                                    </td>*@
                                            </tr>
}
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <br />
                    <br />

                    page @p of @Model.TotalPages pages (@Model.Count items)



                    @{ var prevDisabled = !Model.Transaction.HasPreviousPage ? "disabled" : "";
                        var nextDisabled = !Model.Transaction.HasNextPage ? "disabled" : ""; }

                    <div>
                        <ul class="pagination">
                            <li class="page-item @(!Model.ShowFirst ? "disabled" : "")">
                                <a asp-page="./AllUsers" asp-route-CurrentPage="1" class="page-link"><i class="fas fa-fast-backward"></i></a>
                            </li>

                            <li class="page-item @(!Model.ShowPrevious ? "disabled" : "")">
                                <a asp-page="./AllUsers" asp-route-sortOrder="@Model.CurrentSort"
                                   asp-route-pageIndex="@(Model.Transaction.PageIndex - 1)"
                                   asp-route-currentFilter="@Model.CurrentFilter" asp-route-CurrentPage="@(Model.CurrentPage - 1)" class="page-link"><i class="fas fa-step-backward"></i></a>
                            </li>
                            @{ int? fnumber = Model.CurrentPage - 5;
                                int? lnumber = Model.CurrentPage + 5; }



                            @for (var i = fnumber; i <= lnumber; i++)
                            {

                                if (!i.ToString().Contains("-"))
                                {
                                    if (i != 0)
                                    {


                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort"
                       asp-route-pageIndex="@i"
                       asp-route-currentFilter="@Model.CurrentFilter" asp-route-currentpage="@i" class="page-link">@i</a>
                </li>}
                                }
                                if (i == Model.TotalPages)
                                {
                                    break;
                                }

                            }

                            <li class="page-item  @(!Model.ShowNext ? "disabled" : "")">
                                <a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort"
                                   asp-route-pageIndex="@(Model.CurrentPage + 1)"
                                   asp-route-currentFilter="@Model.CurrentFilter" asp-route-CurrentPage="@(Model.CurrentPage + 1)" class="page-link"><i class="fas fa-step-forward"></i></a>
                            </li>

                            <li class="page-item  @(!Model.ShowLast ? "disabled" : "")">
                                <a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort"
                                   asp-route-pageIndex="@(Model.TotalPages)"
                                   asp-route-currentFilter="@Model.CurrentFilter"
                                   asp-route-CurrentPage="@Model.TotalPages" class="page-link"><i class="fas fa-fast-forward"></i></a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>